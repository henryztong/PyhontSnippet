from django.contrib import admin
from .models import Question,Choice
# Register your models here.

# admin.site.register(Question)

# 重排表单列表字段
# class QuestionAdmin(admin.ModelAdmin):
#     fields = ['pub_date','question_text']
#
# admin.site.register(Question,QuestionAdmin)

# 划分字段集,新增标题
# class QuestionAdmin(admin.ModelAdmin):
#     fieldsets = [(None,{'fields':['question_text']}),('Date information 标题',{'fields':['pub_date']}),]
# admin.site.register(Question,QuestionAdmin)


# 关联对象方法一：让Choice直接显示在admin主页
# admin.site.register(Choice)


# 关联对象方法二：在你创建“投票”对象时直接添加好几个选项
# class ChoiceInline(admin.TabularInline):
#     model = Choice
#     extra = 3
#     # 有三个关联的选项插槽——由extra定义，且每次你返回任意已创建的对象的“修改”页面时，你会见到三个新的插槽。
#
# class QuestionAdmin(admin.ModelAdmin):
#     fieldsets = [(None,{'fields':['question_text']}),('Date information',{'fields':['pub_date'],'classes':['collapse']}),]
#     inlines = [ChoiceInline]
#
# admin.site.register(Question,QuestionAdmin)


# 让投票列表页面显示所有字段
class ChoiceInline(admin.TabularInline):
    model = Choice
    extra = 3
    # 有三个关联的选项插槽——由extra定义，且每次你返回任意已创建的对象的“修改”页面时，你会见到三个新的插槽。

class QuestionAdmin(admin.ModelAdmin):
    fieldsets = [(None,{'fields':['question_text']}),('Date information',{'fields':['pub_date'],'classes':['collapse']}),]
    inlines = [ChoiceInline]
    # 列表格式化
    list_display = ('question_text','pub_date','was_published_recently')

    # 添加“过滤器”侧边栏
    list_filter = ['pub_date']

    # 添加搜索功能
    search_fields = ['question_text']

    # 设置分页
    list_per_page = 2

admin.site.register(Question,QuestionAdmin)









